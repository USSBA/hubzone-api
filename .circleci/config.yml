# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
workflows:
  version: 2
  test:
    jobs:
      - rubocop
      - rspec
      - poirot
jobs:
  rubocop:
    docker:
      # specify the version you desire here
      - image: sbagov/cc-sba-hz-api:1.0
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: run rubocop
          command: |
            bundle exec rubocop .
  rspec:
    docker:
      # specify the version you desire here
       - image: sbagov/cc-sba-hz-api:1.0
         environment:
           HUBZONE_API_DB_USER: postgres
           HUBZONE_API_DB_PASSWORD: postgres
           RAILS_ENV: test
           #MSG_API_DB_HOST=postgres

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
       - image: circleci/ruby:2.3
         environment:
           POSTGRES_USER: postgres
           POSTGRES_PASSWORD: postgres

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            #TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rake db:create db:migrate
            bundle exec rspec --format progress \
                              --out /tmp/test-results/rspec.xml \
                              --format progress \
                              spec

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  poirot:
    docker:
      # specify the version you desire here
       - image: sbagov/cc-sba-hz-api:1.0
         environment:
           HUBZONE_API_DB_USER: postgres
           HUBZONE_API_DB_PASSWORD: postgres
           RAILS_ENV: test
           #MSG_API_DB_HOST=postgres

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
       - image: circleci/ruby:2.3
         environment:
           POSTGRES_USER: postgres
           POSTGRES_PASSWORD: postgres

    working_directory: ~/repo

    steps:
      - checkout

      # run tests!
      - run:
          name: run poirot
          command: |
            poirot --patterns hubzone-poirot-patterns.txt --revlist="develop^..HEAD" --verbose

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
